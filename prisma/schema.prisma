generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider  = "postgresql"
  url       = env("DATABASE_URL")
  directUrl = env("DIRECT_URL")
}
        
    
model User {
  id    Int     @id @default(autoincrement())
  email String  @unique

  // OAuth Provider Information
  supabaseId      String?  @unique @map("supabase_id") // Supabase Auth user ID
  provider        String?  // "google", "github", "email", etc.
  providerUserId  String?  @map("provider_user_id") // Provider's unique user ID
  
  // Profile Information
  avatarUrl       String?  @map("avatar_url")
  username        String?  @unique // GitHub username or display name
  
  
  // GitHub specific fields
  githubUsername  String?  @map("github_user_name")
  githubId        Int?     @map("github_id") // GitHub user ID
  
  // Google specific fields
  googleId        String?  @map("google_id") // Google user ID
  googleUsername  String?  @map("google_user_name")
 
  // Account status
  emailVerified   Boolean  @default(false) @map("email_verified")
  isActive        Boolean  @default(true) @map("is_active")
  
  // Payment and subscription
  credits         Float    @default(0) // 用户余额/积分
  plan            String   @default("free") // 用户套餐: "free", "basic", "pro", "enterprise"
  
  // Timestamps
  createdAt       DateTime @default(now()) @map("created_at")
  updatedAt       DateTime @updatedAt @map("updated_at")
  lastLoginAt     DateTime? @map("last_login_at")

  // Relationships
  orders          Order[]

  @@map("users")
}

model Order {
  id            Int      @id @default(autoincrement())
  userId        String   @map("user_id") // 关联用户ID (使用 supabaseId)
  price         Float?   // 订单价格
  product       String   // 产品名称，必填
  payEmail      String?  @map("pay_email") // 支付邮箱
  payName       String?  @map("pay_name") // 支付姓名
  payCurrency   String?  @map("pay_currency") // 支付货币
  status        String   @default("pending") // 订单状态: "pending", "completed", "failed", "cancelled"
  
  // Timestamps
  createDate    DateTime @default(now()) @map("create_date") // 创建时间
  updateDate    DateTime @updatedAt @map("update_date") // 更新时间

  // Relationship
  user          User?    @relation(fields: [userId], references: [supabaseId])

  @@map("orders")
}